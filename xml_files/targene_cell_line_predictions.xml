<tool id="pancancer_targene_cell_line_predictions" name="PanCancer_targene_cell_line_predictions" version="@VERSION@">
    <description>targene status in ccle cell lines </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <version_command><![CDATA['targene_cell_line_predictions.py' --version]]></version_command>
    <command><![CDATA[
        cp -R '$classifier.extra_files_path' '${output_alt_folder.extra_files_path}' 
        && 
        targene_cell_line_predictions.py
        --classifier '${output_alt_folder.extra_files_path}'
        #if $targenes and str($targenes):
        --targenes '$targenes'
        #end if
        #if $path_genes and str($path_genes):
        --path_genes '$path_genes'
        #end if
        #if $ccle_rnaseq and $ccle_rnaseq is not None:
        --ccle_rnaseq '$ccle_rnaseq'
        #end if
        #if $ccle_mut and $ccle_mut is not None:
        --ccle_mut '$ccle_mut'
        #end if
        #if $ccle_maf and $ccle_maf is not None:
        --ccle_maf '$ccle_maf'
        #end if
        #if $gdsc_rnaseq and $gdsc_rnaseq is not None:
        --gdsc_rnaseq '$gdsc_rnaseq'
        #end if
        #if $gdsc_mut and $gdsc_mut is not None:
        --gdsc_mut '$gdsc_mut'
        #end if
        #if $gdsc1_phar and $gdsc1_phar is not None:
        --gdsc1_phar '$gdsc1_phar'
        #end if
        #if $gdsc2_phar and $gdsc2_phar is not None:
        --gdsc2_phar '$gdsc2_phar'
        #end if
        &&
        @OUTPUT_ALT_FOLDER_HTML@
        ]]>
    </command>
    <inputs>
        <param argument="--classifier" label="classifier summary folder data" name="classifier" optional="false" type="data" format="html" />
        <param argument="--targenes" label="Comma separated string of HUGO targene symbols" name="targenes" optional="False" type="text" value="KRAS_MUT,NRAS_MUT,HRAS_MUT"/>
        <param argument="--path_genes" label="string of the genes to extract or genelist file" name="path_genes" optional="true" type= "data" format="txt"/>
        <param argument="--ccle_rnaseq" label="Filename ccle rnaseq data" name="ccle_rnaseq" optional="false" type="data" format="tabular" help="data/ccle_rnaseq_genes_rpkm_20180929_mod.tsv"/>
        <param argument="--ccle_mut" label="Filename ccle mutational data" name="ccle_mut" optional="true" type="data" format="tabular" help="data/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.tsv"/>
        <param argument="--ccle_maf" label="Filename ccle variant data" name="ccle_maf"  optional="true" type="data" format="txt" help="data/CCLE_DepMap_18Q1_maf_20180207.txt" />
        <param argument="--gdsc_rnaseq" label="Filename gdsc rnaseq data" name="gdsc_rnaseq" optional="false" type="data" format="tabular" help="data/GDSC_EXP_CCLE_converted_name.tsv"/>
        <param argument="--gdsc_mut" label="Filename gdsc mutational data" name="gdsc_mut" optional="true" type="data" format="tabular" help="data/GDSC_CCLE_common_mut_cnv_binary.tsv"/>
        <param argument="--gdsc1_phar" label="Filename for gdsc1 pharmacological data file" name="gdsc1_phar" optional="false" type="data" format="txt" help="data/gdsc1_ccle_pharm_fitted_dose_data.txt"/>
        <param argument="--gdsc2_phar" label="Filename for gdsc2 pharmacological data file" name="gdsc2_phar" optional="false" type="data" format="txt" help="data/gdsc2_ccle_pharm_fitted_dose_data.txt"/>
    </inputs>
    <outputs>
        <expand macro="output_alt_folder" />
    </outputs>
    <help><![CDATA[
      Pancancer_Aberrant_Pathway_Activity_Analysis scripts/viz/targene_cell_line_predictions_mod.py:

      --targenes        comma separated string of HUGO symbols for target genes or targenes_list.csv file
      --path_genes      comma separated string of HUGO symbols for all genes in the target pathway or path_genes.txt file
      --classifier      String of the location of classifier_summary file
      --ccle_rnaseq     Filename of CCLE gene expression data file
      --ccle_mut        Filename of CCLE cell lines/gene mutations data file
      --ccle_maf        Filename of CCLE mutational variant level data file
      --gdsc_rnaseq     Filename of GDSC gene expression data file
      --gdsc_mut        Filename of GDSC cell lines/gene mutations data file
      --gdsc1_phar      Filename of GDSC1 pharmocological response data
      --gdsc2_phar      Filename of GDSC2 pharmocological response data

      Output:
      - Generate predictions for CCLE data using targene classifier(ccle_histogram.png)
      - Generate classifier scores for CCLE cell lines and combines CCLE mutational data and variant data with classifier scores (ccle_targene_classifier_scores.tsv).
      - Performes t-test on classifier weights across targene mutant vs targene wildtype cell-line groups(ccle_targene_WT_MUT_predictions.pdf)
      - add CCLE nucleotide scores at variant level and update nucleotide_mutation_scores.tsv (updated_Data_nucleotide_scores.csv)
      - add CCLE protein scores at variant level and update aminoacid_mutation_scores.tsv (updated_Data_aminoacid_scores.csv)
      - Generate predictions for GDSC data using targene classifier(gdsc_scores_histogram.png)
      - Generate classifier scores for GDSC cell lines and combines CCLE mutational data and variant data with classifier scores (gdsc_targene_classifier_scores.tsv).
      - Performes t-test on classifier weights across targene mutant vs targene wildtype cell-line groups(gdsc_targene_WT_MUT_predictions.pdf)
      -Apply GDSC classifier scores to evaluate GDSC1 pharmacologial data response(gdsc1_targene_pharmacology_predictions.tsv)
      -Apply GDSC classifier scores to evaluate GDSC2 pharmacologial data response(gdsc2_targene_pharmacology_predictions.tsv)
      -Apply CCLE classifier scores to evaluate GDSC1 pharmacologial data response(gdsc1_ccle_targene_pharmacology_predictions.tsv)
      -Apply CCLE classifier scores to evaluate GDSC2 pharmacologial data response(gdsc2_ccle_targene_pharmacology_predictions.tsv) 

      ]]></help>
</tool>
